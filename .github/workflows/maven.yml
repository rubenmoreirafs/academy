# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgresuser
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v4
      # Environment variables used by the `client.js` script to create a new PostgreSQL table.
      env:
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_USER: postgresuser
        POSTGRES_PASSWORD: mysecretpassword
        POSTGRES_DB: postgres
        # The default PostgreSQL port
        POSTGRES_PORT: 5432:5432
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - uses: rubenmoreirafs/academy/.github/actions/maven_build@main

    - name: Run docker file
      run: docker build . --file ./src/main/docker/Dockerfile.jvm --tag academy:$(date +%s)





